///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace LaunchFSW
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Couplergains recording.
    /// </summary>
    [TestModule("b781ed4d-d055-4bfc-85aa-b7286fba85cb", ModuleType.Recording, 1)]
    public partial class Couplergains : ITestModule
    {
        /// <summary>
        /// Holds an instance of the LaunchFSWRepository repository.
        /// </summary>
        public static LaunchFSWRepository repo = LaunchFSWRepository.Instance;

        static Couplergains instance = new Couplergains();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Couplergains()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Couplergains Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Smart_window.MenuAutomationIdsViewAction' at Center.", repo.Smart_window.MenuAutomationIdsViewActionInfo, new RecordItemIndex(0));
            //repo.Smart_window.MenuAutomationIdsViewAction.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmartFit.SomeContainer' at Center.", repo.SmartFit.SomeContainerInfo, new RecordItemIndex(1));
            //repo.SmartFit.SomeContainer.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmartFit.MenuAutomationIdsViewAutomationIdsCoup1' at Center.", repo.SmartFit.MenuAutomationIdsViewAutomationIdsCoup1Info, new RecordItemIndex(2));
            //repo.SmartFit.MenuAutomationIdsViewAutomationIdsCoup1.Click();
            //Delay.Milliseconds(0);
            
            //GainsCoupler.Viewgains();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Smart_window.MenuAutomationIdsViewAction' at Center.", repo.Smart_window.MenuAutomationIdsViewActionInfo, new RecordItemIndex(4));
            //repo.Smart_window.MenuAutomationIdsViewAction.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmartFit.SomeContainer' at Center.", repo.SmartFit.SomeContainerInfo, new RecordItemIndex(5));
            //repo.SmartFit.SomeContainer.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmartFit.MenuAutomationIdsViewAutomationIdsCoup2' at Center.", repo.SmartFit.MenuAutomationIdsViewAutomationIdsCoup2Info, new RecordItemIndex(6));
            //repo.SmartFit.MenuAutomationIdsViewAutomationIdsCoup2.Click();
            //Delay.Milliseconds(0);
            
            //C2cgains.N2ccoupler();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Smart_window.FittingAutomationIdsSaveAction' at Center.", repo.Smart_window.FittingAutomationIdsSaveActionInfo, new RecordItemIndex(8));
            //repo.Smart_window.FittingAutomationIdsSaveAction.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(9));
            //Delay.Duration(10000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Smart_window.SaveAutomationIdsPerformSaveAutomationI1' at Center.", repo.Smart_window.SaveAutomationIdsPerformSaveAutomationI1Info, new RecordItemIndex(10));
            //repo.Smart_window.SaveAutomationIdsPerformSaveAutomationI1.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(11));
            //Delay.Duration(5000, false);
            
            //PatientCheck.ValidatePatient();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'Smart_window.FitPatient' at Center.", repo.Smart_window.FitPatientInfo, new RecordItemIndex(13));
            //repo.Smart_window.FitPatient.MoveTo();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Smart_window.FitPatient' at Center.", repo.Smart_window.FitPatientInfo, new RecordItemIndex(14));
            //repo.Smart_window.FitPatient.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmartLauncher.SmartLauncherAutomationIdsSimulateActio' at Center.", repo.SmartLauncher.SmartLauncherAutomationIdsSimulateActioInfo, new RecordItemIndex(15));
            //repo.SmartLauncher.SmartLauncherAutomationIdsSimulateActio.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(16));
            //Delay.Duration(3000, false);
            
            //C2cgains.N2ccoupler2();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Smart_window.MenuAutomationIdsFittingAction' at Center.", repo.Smart_window.MenuAutomationIdsFittingActionInfo, new RecordItemIndex(18));
            //repo.Smart_window.MenuAutomationIdsFittingAction.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmartFit.MenuAutomationIdsFittingAutomationIdsR' at Center.", repo.SmartFit.MenuAutomationIdsFittingAutomationIdsRInfo, new RecordItemIndex(19));
            //repo.SmartFit.MenuAutomationIdsFittingAutomationIdsR.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Window.DialogAutomationIdsPositiveAction' at Center.", repo.Window.DialogAutomationIdsPositiveActionInfo, new RecordItemIndex(20));
            //repo.Window.DialogAutomationIdsPositiveAction.Click();
            //Delay.Milliseconds(0);
            
            //GainsCoupler.viewgains2();
            //Delay.Milliseconds(0);
            
            //Filematch.Compare();
            //Delay.Milliseconds(0);
            
            //Filematch.compare2();
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Fit Patient') on item 'Smart_window.StandAloneAutomationIdsListAutomationId1'.", repo.Smart_window.StandAloneAutomationIdsListAutomationId1Info, new RecordItemIndex(24));
            //Validate.AttributeEqual(repo.Smart_window.StandAloneAutomationIdsListAutomationId1Info, "Text", "Fit Patient");
            //Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
